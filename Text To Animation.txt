from flask import Flask, request, jsonify, send_file
from flask_cors import CORS
import os
from gtts import gTTS
from moviepy.editor import VideoFileClip, AudioFileClip, CompositeVideoClip

app = Flask(__name__)
CORS(app)  # Enable CORS for frontend connection

# Directory to store generated files
OUTPUT_DIR = "output"
os.makedirs(OUTPUT_DIR, exist_ok=True)

@app.route("/generate", methods=["POST"])
def generate_video():
    data = request.json
    input_text = data.get("text", "")

    if not input_text:
        return jsonify({"error": "Text input is required"}), 400

    # Step 1: Convert Text to Speech
    voice_file = os.path.join(OUTPUT_DIR, "voiceover.mp3")
    tts = gTTS(input_text, lang="hi")  # Change 'hi' to 'en' for English
    tts.save(voice_file)

    # Step 2: Create an Animated Text Scene using Manim
    animation_script = f"""
from manim import *
class TextAnimation(Scene):
    def construct(self):
        text = Text("{input_text}", font="Devanagari", font_size=48)
        self.play(Write(text))
        self.wait(3)
        self.play(FadeOut(text))
    """

    script_path = os.path.join(OUTPUT_DIR, "script.py")
    with open(script_path, "w") as file:
        file.write(animation_script)

    # Step 3: Render Manim Animation
    video_output = os.path.join(OUTPUT_DIR, "animation.mp4")
    os.system(f"manim -qk {script_path} TextAnimation -o {video_output}")

    # Step 4: Merge Audio and Video
    final_video = os.path.join(OUTPUT_DIR, "final_video.mp4")
    video_clip = VideoFileClip(video_output)
    audio_clip = AudioFileClip(voice_file)
    final_clip = video_clip.set_audio(audio_clip)
    final_clip.write_videofile(final_video, codec="libx264", fps=30)

    return send_file(final_video, as_attachment=True)

if __name__ == "__main__":
    app.run(debug=True)
